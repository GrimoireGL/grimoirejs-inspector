{"version":3,"sources":["webpack:///webpack/bootstrap a41d15a47072c3c3bbad","webpack:///./background/background.js"],"names":["connections","cacheLog","chrome","runtime","onConnect","addListener","port","extensionListener","message","sender","sendResponse","name","tabId","l","i","length","postMessage","$source","tabs","sendMessage","$tabId","onMessage","onDisconnect","removeListener","Object","keys","len","request","tab","id","type","splice","push","console","log"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA,KAAIA,cAAc,EAAlB;AACA,KAAIC,WAAW,EAAf;AACAC,QAAOC,OAAP,CAAeC,SAAf,CAAyBC,WAAzB,CAAqC,UAASC,IAAT,EAAe;;AAEhD,SAAIC,oBAAoB,SAApBA,iBAAoB,CAASC,OAAT,EAAkBC,MAAlB,EAA0BC,YAA1B,EAAwC;AAC5D;AACA;AACA,aAAIF,QAAQG,IAAR,IAAgB,MAApB,EAA4B;AACxBX,yBAAYQ,QAAQI,KAApB,IAA6BN,IAA7B;AACA,iBAAIL,SAASO,QAAQI,KAAjB,CAAJ,EAA6B;AACzB,qBAAMC,IAAIZ,SAASO,QAAQI,KAAjB,CAAV;AACA,sBAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAID,EAAEE,MAAtB,EAA8BD,GAA9B,EAAmC;AAC/BR,0BAAKU,WAAL,CAAiBH,EAAEC,CAAF,CAAjB;AACH;AACJ;AACD;AACH,UATD,MASO;AACH,iBAAIN,QAAQS,OAAR,KAAoB,6BAAxB,EAAuD;AACnDf,wBAAOgB,IAAP,CAAYC,WAAZ,CAAwBX,QAAQY,MAAhC,EAAuCZ,OAAvC;AACH;AACJ;AACJ,MAjBD;;AAmBA;AACAF,UAAKe,SAAL,CAAehB,WAAf,CAA2BE,iBAA3B;;AAEAD,UAAKgB,YAAL,CAAkBjB,WAAlB,CAA8B,UAASC,IAAT,EAAe;AACzCA,cAAKe,SAAL,CAAeE,cAAf,CAA8BhB,iBAA9B;;AAEA,aAAIW,OAAOM,OAAOC,IAAP,CAAYzB,WAAZ,CAAX;AACA,cAAK,IAAIc,IAAI,CAAR,EAAWY,MAAMR,KAAKH,MAA3B,EAAmCD,IAAIY,GAAvC,EAA4CZ,GAA5C,EAAiD;AAC7C,iBAAId,YAAYkB,KAAKJ,CAAL,CAAZ,KAAwBR,IAA5B,EAAkC;AAC9B,wBAAON,YAAYkB,KAAKJ,CAAL,CAAZ,CAAP;AACA;AACH;AACJ;AACJ,MAVD;AAWH,EAnCD;;AAqCA;AACA;AACAZ,QAAOC,OAAP,CAAekB,SAAf,CAAyBhB,WAAzB,CAAqC,UAASsB,OAAT,EAAkBlB,MAAlB,EAA0BC,YAA1B,EAAwC;AACzE;AACA,SAAID,OAAOmB,GAAX,EAAgB;AACZ,aAAIhB,QAAQH,OAAOmB,GAAP,CAAWC,EAAvB;AACA,aAAIjB,SAASZ,WAAb,EAA0B;AACtBA,yBAAYY,KAAZ,EAAmBI,WAAnB,CAA+BW,OAA/B;AACH,UAFD,MAEO;AACH,iBAAIA,QAAQV,OAAR,KAAoB,oBAAxB,EAA8C;AAC1C,qBAAI,CAAChB,SAASW,KAAT,CAAL,EAAsB;AAClBX,8BAASW,KAAT,IAAkB,EAAlB;AACH,kBAFD,MAEO,IAAIe,QAAQG,IAAR,KAAiB,iBAArB,EAAwC;AAC3C7B,8BAASW,KAAT,EAAgBmB,MAAhB,CAAuB,CAAvB,EAA0B9B,SAASW,KAAT,EAAgBG,MAA1C;AACH;AACDd,0BAASW,KAAT,EAAgBoB,IAAhB,CAAqBL,OAArB;AACH;AACJ;AACJ,MAdD,MAcO;AACHM,iBAAQC,GAAR,CAAY,yBAAZ;AACH;AACD,YAAO,IAAP;AACH,EApBD,E","file":"./lib/background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a41d15a47072c3c3bbad","var connections = {};\nvar cacheLog = {};\nchrome.runtime.onConnect.addListener(function(port) {\n\n    var extensionListener = function(message, sender, sendResponse) {\n        // The original connection event doesn't include the tab ID of the\n        // DevTools page, so we need to send it explicitly.\n        if (message.name == \"init\") {\n            connections[message.tabId] = port;\n            if (cacheLog[message.tabId]) {\n                const l = cacheLog[message.tabId];\n                for (let i = 0; i < l.length; i++) {\n                    port.postMessage(l[i]);\n                }\n            }\n            return;\n        } else {\n            if (message.$source === \"grimoire-inspector-dev-tool\") {\n                chrome.tabs.sendMessage(message.$tabId,message);\n            }\n        }\n    }\n\n    // Listen to messages sent from the DevTools page\n    port.onMessage.addListener(extensionListener);\n\n    port.onDisconnect.addListener(function(port) {\n        port.onMessage.removeListener(extensionListener);\n\n        var tabs = Object.keys(connections);\n        for (var i = 0, len = tabs.length; i < len; i++) {\n            if (connections[tabs[i]] == port) {\n                delete connections[tabs[i]]\n                break;\n            }\n        }\n    });\n});\n\n// Receive message from content script and relay to the devTools page for the\n// current tab\nchrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n    // Messages from content scripts should have sender.tab set\n    if (sender.tab) {\n        var tabId = sender.tab.id;\n        if (tabId in connections) {\n            connections[tabId].postMessage(request);\n        } else {\n            if (request.$source === \"grimoire-inspector\") {\n                if (!cacheLog[tabId]) {\n                    cacheLog[tabId] = [];\n                } else if (request.type === \"finding-context\") {\n                    cacheLog[tabId].splice(0, cacheLog[tabId].length);\n                }\n                cacheLog[tabId].push(request);\n            }\n        }\n    } else {\n        console.log(\"sender.tab not defined.\");\n    }\n    return true;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./background/background.js"],"sourceRoot":""}