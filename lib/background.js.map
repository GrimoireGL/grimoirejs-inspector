{"version":3,"sources":["webpack:///webpack/bootstrap 624627fbf0a44f207c0c","webpack:///./background/background.js"],"names":["connections","cacheLog","chrome","runtime","onConnect","addListener","port","devtoolListener","message","sender","sendResponse","name","tabId","l","i","length","postMessage","splice","$source","tabs","sendMessage","$tabId","onMessage","onDisconnect","removeListener","extensionListener","Object","keys","len","request","tab","id","console","log"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA,KAAIA,cAAc,EAAlB;AACA,KAAIC,WAAW,EAAf;AACAC,QAAOC,OAAP,CAAeC,SAAf,CAAyBC,WAAzB,CAAqC,UAASC,IAAT,EAAe;;AAEhD;AACA,SAAIC,kBAAkB,SAAlBA,eAAkB,CAASC,OAAT,EAAkBC,MAAlB,EAA0BC,YAA1B,EAAwC;AAC1D,aAAIF,QAAQG,IAAR,IAAgB,MAApB,EAA4B;AACxBX,yBAAYQ,QAAQI,KAApB,IAA6BN,IAA7B;AACA,iBAAIL,SAASO,QAAQI,KAAjB,CAAJ,EAA6B;AACzB,qBAAMC,IAAIZ,SAASO,QAAQI,KAAjB,CAAV;AACA,sBAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAID,EAAEE,MAAtB,EAA8BD,GAA9B,EAAmC;AAC/BR,0BAAKU,WAAL,CAAiBH,EAAEC,CAAF,CAAjB;AACH;AACDD,mBAAEI,MAAF,CAAS,CAAT,EAAYhB,SAASW,KAAT,EAAgBG,MAA5B;AACH;AACD;AACH,UAVD,MAUO;AACH,iBAAIP,QAAQU,OAAR,KAAoB,6BAAxB,EAAuD;AACnDhB,wBAAOiB,IAAP,CAAYC,WAAZ,CAAwBZ,QAAQa,MAAhC,EAAwCb,OAAxC;AACH;AACJ;AACJ,MAhBD;;AAkBA;AACAF,UAAKgB,SAAL,CAAejB,WAAf,CAA2BE,eAA3B;AACAD,UAAKiB,YAAL,CAAkBlB,WAAlB,CAA8B,UAASC,IAAT,EAAe;AACzCA,cAAKgB,SAAL,CAAeE,cAAf,CAA8BC,iBAA9B;;AAEA,aAAIN,OAAOO,OAAOC,IAAP,CAAY3B,WAAZ,CAAX;AACA,cAAK,IAAIc,IAAI,CAAR,EAAWc,MAAMT,KAAKJ,MAA3B,EAAmCD,IAAIc,GAAvC,EAA4Cd,GAA5C,EAAiD;AAC7C,iBAAId,YAAYmB,KAAKL,CAAL,CAAZ,KAAwBR,IAA5B,EAAkC;AAC9B,wBAAON,YAAYmB,KAAKL,CAAL,CAAZ,CAAP;AACA;AACH;AACJ;AACJ,MAVD;AAWH,EAlCD;;AAoCA;AACA;AACAZ,QAAOC,OAAP,CAAemB,SAAf,CAAyBjB,WAAzB,CAAqC,UAASwB,OAAT,EAAkBpB,MAAlB,EAA0BC,YAA1B,EAAwC;AACzE;AACA,SAAID,OAAOqB,GAAX,EAAgB;AACZ,aAAIlB,QAAQH,OAAOqB,GAAP,CAAWC,EAAvB;AACA,aAAInB,SAASZ,WAAb,EAA0B;AACtBA,yBAAYY,KAAZ,EAAmBI,WAAnB,CAA+Ba,OAA/B;AACH;AACJ,MALD,MAKO;AACHG,iBAAQC,GAAR,CAAY,yBAAZ;AACH;AACD,YAAO,IAAP;AACH,EAXD,E","file":"./lib/background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 624627fbf0a44f207c0c","var connections = {};\nvar cacheLog = {};\nchrome.runtime.onConnect.addListener(function(port) {\n\n    // devTools側からのリスナー\n    var devtoolListener = function(message, sender, sendResponse) {\n        if (message.name == \"init\") {\n            connections[message.tabId] = port;\n            if (cacheLog[message.tabId]) {\n                const l = cacheLog[message.tabId];\n                for (let i = 0; i < l.length; i++) {\n                    port.postMessage(l[i]);\n                }\n                l.splice(0, cacheLog[tabId].length);\n            }\n            return;\n        } else {\n            if (message.$source === \"grimoire-inspector-dev-tool\") {\n                chrome.tabs.sendMessage(message.$tabId, message);\n            }\n        }\n    }\n\n    // Listen to messages sent from the DevTools page\n    port.onMessage.addListener(devtoolListener);\n    port.onDisconnect.addListener(function(port) {\n        port.onMessage.removeListener(extensionListener);\n\n        var tabs = Object.keys(connections);\n        for (var i = 0, len = tabs.length; i < len; i++) {\n            if (connections[tabs[i]] == port) {\n                delete connections[tabs[i]]\n                break;\n            }\n        }\n    });\n});\n\n// Receive message from content script and relay to the devTools page for the\n// current tab\nchrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n    // Messages from content scripts should have sender.tab set\n    if (sender.tab) {\n        var tabId = sender.tab.id;\n        if (tabId in connections) {\n            connections[tabId].postMessage(request);\n        }\n    } else {\n        console.log(\"sender.tab not defined.\");\n    }\n    return true;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./background/background.js"],"sourceRoot":""}