{"version":3,"sources":["webpack:///webpack/bootstrap d3857262d379b20b32bc","webpack:///./src/background/background.js"],"names":["connections","chrome","runtime","onConnect","addListener","port","devtoolListener","message","sender","sendResponse","name","tabId","$source","tabs","sendMessage","$tabId","onMessage","onDisconnect","removeListener","extensionListener","Object","keys","i","len","length","request","tab","id","postMessage","console","log"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA,KAAIA,cAAc,EAAlB;AACAC,QAAOC,OAAP,CAAeC,SAAf,CAAyBC,WAAzB,CAAqC,UAASC,IAAT,EAAe;;AAEhD;AACA,SAAIC,kBAAkB,SAAlBA,eAAkB,CAASC,OAAT,EAAkBC,MAAlB,EAA0BC,YAA1B,EAAwC;AAC1D,aAAIF,QAAQG,IAAR,IAAgB,MAApB,EAA4B;AACxBV,yBAAYO,QAAQI,KAApB,IAA6BN,IAA7B;AACA;AACH,UAHD,MAGO;AACH,iBAAIE,QAAQK,OAAR,KAAoB,6BAAxB,EAAuD;AACnDX,wBAAOY,IAAP,CAAYC,WAAZ,CAAwBP,QAAQQ,MAAhC,EAAwCR,OAAxC;AACH;AACJ;AACJ,MATD;;AAWA;AACAF,UAAKW,SAAL,CAAeZ,WAAf,CAA2BE,eAA3B;AACAD,UAAKY,YAAL,CAAkBb,WAAlB,CAA8B,UAASC,IAAT,EAAe;AACzCA,cAAKW,SAAL,CAAeE,cAAf,CAA8BC,iBAA9B;;AAEA,aAAIN,OAAOO,OAAOC,IAAP,CAAYrB,WAAZ,CAAX;AACA,cAAK,IAAIsB,IAAI,CAAR,EAAWC,MAAMV,KAAKW,MAA3B,EAAmCF,IAAIC,GAAvC,EAA4CD,GAA5C,EAAiD;AAC7C,iBAAItB,YAAYa,KAAKS,CAAL,CAAZ,KAAwBjB,IAA5B,EAAkC;AAC9B,wBAAOL,YAAYa,KAAKS,CAAL,CAAZ,CAAP;AACA;AACH;AACJ;AACJ,MAVD;AAWH,EA3BD;;AA6BA;AACA;AACArB,QAAOC,OAAP,CAAec,SAAf,CAAyBZ,WAAzB,CAAqC,UAASqB,OAAT,EAAkBjB,MAAlB,EAA0BC,YAA1B,EAAwC;AACzE;AACA,SAAID,OAAOkB,GAAX,EAAgB;AACZ,aAAIf,QAAQH,OAAOkB,GAAP,CAAWC,EAAvB;AACA,aAAIhB,SAASX,WAAb,EAA0B;AACtBA,yBAAYW,KAAZ,EAAmBiB,WAAnB,CAA+BH,OAA/B;AACH;AACJ,MALD,MAKO;AACHI,iBAAQC,GAAR,CAAY,yBAAZ;AACH;AACD,YAAO,IAAP;AACH,EAXD,E","file":"./lib/background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d3857262d379b20b32bc","var connections = {};\nchrome.runtime.onConnect.addListener(function(port) {\n\n    // devTools側からのリスナー\n    var devtoolListener = function(message, sender, sendResponse) {\n        if (message.name == \"init\") {\n            connections[message.tabId] = port;\n            return;\n        } else {\n            if (message.$source === \"grimoire-inspector-dev-tool\") {\n                chrome.tabs.sendMessage(message.$tabId, message);\n            }\n        }\n    }\n\n    // Listen to messages sent from the DevTools page\n    port.onMessage.addListener(devtoolListener);\n    port.onDisconnect.addListener(function(port) {\n        port.onMessage.removeListener(extensionListener);\n\n        var tabs = Object.keys(connections);\n        for (var i = 0, len = tabs.length; i < len; i++) {\n            if (connections[tabs[i]] == port) {\n                delete connections[tabs[i]]\n                break;\n            }\n        }\n    });\n});\n\n// Receive message from content script and relay to the devTools page for the\n// current tab\nchrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\n    // Messages from content scripts should have sender.tab set\n    if (sender.tab) {\n        var tabId = sender.tab.id;\n        if (tabId in connections) {\n            connections[tabId].postMessage(request);\n        }\n    } else {\n        console.log(\"sender.tab not defined.\");\n    }\n    return true;\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/background/background.js"],"sourceRoot":""}