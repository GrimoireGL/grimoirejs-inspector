{"version":3,"sources":["webpack:///webpack/bootstrap 5571d5c24502e0c1328a","webpack:///./embed/embed.js","webpack:///./embed/MessageManager.js"],"names":["post","type","existing","window","GrimoireJS","elementToObject","element","noRecursive","children","i","length","push","key","getAttribute","className","tagName","id","componentToObject","component","name","observeRoot","observer","MutationObserver","mutations","forEach","mutation","addedNodes","addedNode","parent","parentElement","root","observe","attributes","childList","characterData","subtree","on","m","node","nodeDictionary","components","_components","arr","Array","console","log","nodeName","rootNodes","result","rootNode","scriptElement","companion","get","MessageManager","handlers","addEventListener","onRecieve","bind","message","data","$source","Error","packet","Object","assign","postMessage","handler"],"mappings":"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","file":"./lib/embed.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5571d5c24502e0c1328a","import MessageManager from \"./MessageManager\";\n\nMessageManager.post({\n    type: \"finding-context\",\n    existing: !!window.GrimoireJS\n});\nif (!!window.GrimoireJS) {\n\n    function elementToObject(element, noRecursive) {\n        let children;\n        if (!noRecursive) {\n            children = [];\n            for (let i = 0; i < element.children.length; i++) {\n                children.push(elementToObject(element.children[i]));\n            }\n        }\n        return {\n            key: element.getAttribute(\"x-gr-id\"),\n            className: element.className,\n            tagName: element.tagName,\n            id: element.id,\n            children: children\n        };\n    }\n\n    function componentToObject(component){\n      return {\n        name:component.name.name\n      };\n    }\n\n    function observeRoot(element) {\n        const observer = new MutationObserver((mutations) => {\n            mutations.forEach((mutation) => {\n                if (mutation.type === \"childList\") {\n                    for (let i = 0; i < mutation.addedNodes.length; i++) {\n                        const addedNode = mutation.addedNodes[i];\n                        MessageManager.post({\n                            type: \"node-added\",\n                            parent: elementToObject(addedNode.parentElement),\n                            addedNode: elementToObject(addedNode),\n                            root: elementToObject(element)\n                        })\n                    }\n                }\n            });\n        });\n        observer.observe(element, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    }\n\n    MessageManager.on(\"fetch-node\",function(m){\n      const node = window.GrimoireJS.nodeDictionary[m.key];\n      if(!node){\n        return;\n      }\n      const components = node._components;\n      const arr = new Array(components.length);\n      for(let i = 0; i < arr.length; i++){\n        arr[i] = componentToObject(components[i]);\n      }\n      console.log(components);\n      MessageManager.post({\n        type:\"node-info\",\n        nodeName:node.name.name,\n        components:arr\n      })\n    });\n\n    for (let key in window.GrimoireJS.rootNodes) {\n        const root = window.GrimoireJS.rootNodes[key];\n        MessageManager.post({\n            type: \"new-tree\",\n            result: {\n                key: key,\n                rootNode: elementToObject(root.element),\n                scriptElement: elementToObject(root.companion.get(\"scriptElement\"), true)\n            }\n        });\n        observeRoot(root.element);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./embed/embed.js","class MessageManager {\n    constructor() {\n      this.handlers = {};\n      window.addEventListener(\"message\",this.onRecieve.bind(this));\n    }\n\n    onRecieve(message){\n      if(message.data.$source !== \"grimoire-inspector-dev-tool\"){\n        return;\n      }\n      if(this.handlers[message.data.type]){\n        this.handlers[message.data.type](message.data);\n      }else{\n        throw new Error(\"No handler found\");\n      }\n    }\n\n    post(message) {\n        const packet = Object.assign({\n            $source: \"grimoire-inspector\"\n        }, message);\n        if(packet.type === void 0){\n          throw new Error(\"Type must be specified\");\n        }\n        window.postMessage(packet, \"*\");\n    }\n\n    on(type,handler){\n      this.handlers[type] = handler;\n    }\n}\n\nexport default new MessageManager();\n\n\n\n// WEBPACK FOOTER //\n// ./embed/MessageManager.js"],"sourceRoot":""}